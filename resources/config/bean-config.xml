<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
       http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
         http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd">
           

  <!-- 
           *************************************************************************************************************************
           Con questa configurazione Spring utilizza il suo supporto per Hibernate per la connessione al db,
            e carica le classi nel classico modo. 
                      
           *************************************************************************************************************************
     -->
     
  <!-- *** Set the Spring ApplicationContext inside the ApplicationContextProvider class *** -->
    <bean id="springHelper" class="com.progetto.SpringHelper" lazy-init="false"/>
    <!--  
    -->
     
    <bean class="com.progetto.LoggingAspect">
      <property name="beforeMsg" value="Before %s %s" />
      <property name="afterMsg" value="After %s %s" />
    </bean>
    <!--                
    --> 
    
    <aop:aspectj-autoproxy />  
    
</beans>