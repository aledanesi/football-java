<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:s="http://www.springframework.org/schema/security"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans                         
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                         
    http://www.springframework.org/schema/security                         
    http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 
    
    
	
	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">     
		<s:filter-chain-map path-type="ant">         
			<s:filter-chain pattern="/**" filters="securityContextPersistenceFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousAuthenticationFilter,exceptionTranslationFilter,filterSecurityInterceptor"/>			
		</s:filter-chain-map> 
	</bean> 
	
	<bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/index.jsp" />
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>	
	
	<bean id="authenticationProcessingFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler"/> 
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
	</bean>	
	
	<bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/index.jsp"/> 
	</bean>

	<bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp?login_error=1"/> 
	</bean>
	
	<bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />	
	
	<bean id="anonymousAuthenticationFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<property name="key" value="changeThis" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>	
	
	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				<property name="loginFormUrl" value="/login.jsp" />
				<property name="forceHttps" value="false"/>
			</bean>
		</property>
	</bean>	
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource">
		   <s:filter-security-metadata-source>
		      <s:intercept-url pattern="/styles/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		      <s:intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		      <s:intercept-url pattern="/login.jsp*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
		      <s:intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_USER"/>
		   </s:filter-security-metadata-source>        
		</property>
	</bean>	
	
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="eraseCredentialsAfterAuthentication" value="false"/>
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider" />
			</list>
		</property>
	</bean>	
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>	
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>	
	
	<bean id="userDetailsService" class="com.progetto.manager.impl.UserDetailsServiceImpl" />	
	
	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
	
	<bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />
		
</beans> 