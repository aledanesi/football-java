<?xml version="1.0" encoding="UTF-8"?>

<!--
  - DispatcherServlet application context for the Spring web MVC
  - implementation of JPetStore's web tier.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- ========================= VIEW DEFINITIONS ========================= -->

	<!-- 
		InternalResourceViewResolver
		
		Convenient subclass of UrlBasedViewResolver that supports InternalResourceView (i.e. Servlets and JSPs) and subclasses 
		such as JstlView and TilesView. 
	
		The view class for all views generated by this resolver can be specified via UrlBasedViewResolver.setViewClass(java.lang.Class). 
		See UrlBasedViewResolver's javadoc for details. The default is InternalResourceView, or JstlView if the JSTL API is present. 
	
		BTW, it's good practice to put JSP files that just serve as views under WEB-INF, to hide them from direct access 
		(e.g. via a manually entered URL). Only controllers will be able to access them then. 
	
		Note: When chaining ViewResolvers, an InternalResourceViewResolver always needs to be last, as it will attempt 
		to resolve any view name, no matter whether the underlying resource actually exists. 	
	 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/content/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
		
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">   
    	<property name="basename" value="classpath:messages"/>
    	<property name="defaultEncoding" value="UTF-8" />
  	</bean>
  	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="it" />
	</bean>
	 
	 <!-- ========================= ANNOTATION CONTROLLERS ========================= -->
	 
	<!-- CONTROLLERS MODULE -->	 
	<context:component-scan base-package="com.jfootball.web"/>
	
	<!-- Configures the Spring MVC @Controller programming model -->	
	<mvc:annotation-driven />
	
	<!-- ========================= DEFINITIONS OF PUBLIC CONTROLLERS ========================= -->

	<!-- Maps '/' requests to the 'home' view -->
	<mvc:view-controller path="/" view-name="index"/>
	
	<!-- =============================== DEFINITIONS OF VALIDATORS ============================= -->

	<bean id="teamValidator" class="com.jfootball.web.validator.TeamValidator" />
	
	<bean id="playerValidator" class="com.jfootball.web.validator.PlayerValidator" />
	
	<bean id="careerValidator" class="com.jfootball.web.validator.CareerValidator" />
	


	<!-- ========================= DEFINITIONS OF PROTECTED CONTROLLERS ========================= -->
 	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/careers/edit"/>
			<bean id="signonInterceptor1" class="com.jfootball.web.interceptor.SignonInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/teams/move"/>
			<bean id="signonInterceptor2" class="com.jfootball.web.interceptor.SignonInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/players/edit"/>
			<bean id="signonInterceptor3" class="com.jfootball.web.interceptor.SignonInterceptor"/>
		</mvc:interceptor>

		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">            
			<property name="paramName" value="locale" />        
		</bean>    
	</mvc:interceptors>

</beans>
